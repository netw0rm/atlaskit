@import 'shared-variables.less';

// Because of the shadow DOM boundries we can not style the host element the usual way
// To do this the ':host' pseudo-class should be used
// Also we should style the tag name with the same styles because of the browsers
// that do not support shadow DOM
.host-styles() {
  display: block;
}

// we define a class here in order to re-use it in the storybook
// (because in storybook the component name is randomly generated)
.ak-dropdown-item,
ak-dropdown-item,
.ak-dropdown-item-radio,
ak-dropdown-item-radio,
.ak-dropdown-item-checkbox,
ak-dropdown-item-checkbox {
  .host-styles();

  > _shadow_root_ {
    display: block;
  }

  &:not([defined]) {
    display: none;
  }
}

:host {
  .host-styles();

  &(:not([defined])) {
    display: none;
  }
}

.item {
  .flex();
  box-sizing: border-box;
  font-size: 14px;
  font-weight: normal;
  line-height: 20/14;
  padding: 0 unit(@grid * 2, px);
  text-decoration: none;

  &:not(.disabled) {
    color: @ak-dropdown-font-main-color;
    cursor: pointer;

    &:hover {
      background-color: @ak-dropdown-background-hover-color;

      .itemLeftPosition {
        color: rgba(137, 147, 164, 0.48);  //n90, 48% opacity, TODO AK-397
        fill: transparent;
      }

      &.selectedWithIcon {
        .itemLeftPosition {
          color: @ak-color-B50;
          fill: @ak-color-N700;
        }
      }
    }

    &:active {
      background-color: @ak-dropdown-background-active-color;
      color: @ak-dropdown-font-active-color;

      .itemLeftPosition {
        color: rgba(137, 147, 164, 0.48);  //n90, 48% opacity, TODO AK-397
        fill: transparent;
      }

      &.selectedWithIcon {
        .itemLeftPosition {
          color: rgba(137, 147, 164, 0.48);  //n90, 48% opacity, TODO AK-397
          fill: @ak-color-N700;
        }
      }
    }

    .itemLeftPosition {
      color: @ak-color-N400;
      fill: @ak-color-N400;
    }

    &.selectedWithIcon {
      .itemLeftPosition {
        color: @ak-color-B50;
        fill: @ak-color-N700;
      }
    }
  }

  &.disabled {
    .itemLeftPosition {
      color: @ak-color-N600;
      fill: transparent;
    }

    &.selectedWithIcon {
      .itemLeftPosition {
        color: @ak-color-N600;
        fill: @ak-color-N700;
      }
    }
  }

  &:focus {
    box-shadow: 0 0 0 2px @ak-dropdown-focused-outline-color;
    outline: none;
    position: relative; // prevents bgcolor from obfuscating focus ring of focused elements
  }

  &.hidden {
    display: none;
  }
}

.selected {
  background-color: @ak-dropdown-background-selected-color;
  color: @ak-dropdown-font-main-color;
}

.selectedWithIcon {
  background: none;
}

.disabled {
  background-color: @ak-dropdown-background-disabled-color;
  color: @ak-dropdown-font-disabled-color;
  cursor: not-allowed;
}

.itemLeftPosition {
  margin: 0 unit(@grid, px);
  min-width: unit(@grid * 5, px);
}

.itemDefaultPosition {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin: unit(@grid, px);
}

