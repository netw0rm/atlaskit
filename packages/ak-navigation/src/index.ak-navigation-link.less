@import 'shared-variables.less';
@import '~akutil-shared-styles/src/mixins/focus-ring.less';
@import 'slotted-mixin.less';

@ak-navigation-link-color: @ak-color-N500;
@ak-navigation-selected-link-color: @ak-color-B500;

// Because of the shadow DOM boundries we can not style the host element the usual way
// To do this the ':host' pseudo-class should be used
// Also we should style the tag name with the same styles because of the browsers
// that do not support shadow DOM
.host-styles() {
  display: inline-block;
  width: 100%;
}

// we define a class here in order to re-use it in the storybook
// (because in storybook the component name is randomly generated)
.ak-navigation-link,
ak-navigation-link {
  .host-styles();

  &:not([defined]) {
    display: none;
  }
}

:host {
  .host-styles();

  &(:not([defined])) {
    display: none;
  }
}

.wrapper {
  position: relative;
  color: @ak-navigation-link-color;
  display: flex;
  align-items: center;
  white-space: nowrap;
  cursor: pointer;
}

.link {
  align-items: center;  vertical-align: text-bottom;
  color: currentColor;
  display: inline-flex;
  line-height: 30px;
  outline: none;
  padding: 5px 0 5px @container-padding-expanded;
  position: relative; //to prevent stacking context issues with the pseudo element
  text-decoration: none;
  transform: translateX(-@container-padding-expanded);
  width: @container-width;

  &:hover::before {
    background: @ak-color-N30;
  }
  &:active::before, &:focus::before {
    outline: none;
    background: @ak-color-B50;
  }
  &::before {
    content: '';
    position: absolute;
    right: 0;
    left: -@container-padding-expanded;
    top: 0;
    bottom: 0;
    z-index: -1;
  }
}

.text {
  overflow: hidden;
  text-overflow: ellipsis;
  width: @container-link-text-expanded-width;
}

.selected {
  color: @ak-navigation-selected-link-color;
}

// Styles for slotted icons. Uses a mixing for native/polyfill support.
@slottedIconStyle: {
  display: inline-block;
  margin-left: 10px;
  margin-right: 20px;
  position: relative;
  width: 20px;
};
.slot(icon, {}, @slottedIconStyle);
