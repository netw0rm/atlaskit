// These styles will be inserted into a style tag inside
// the shadow dom of each instance of the component
@import '~akutil-shared-styles/src/colors.less';
@import '~akutil-shared-styles/src/mixins/animations.less';


@fontSize: 12px;
@lineHeight: calc(16 / unit(@fontSize));
@fontColor: white;
@maxWidth: 200px;
@borderRadius: 3px;
@leftAndRightTextPadding: 8px;
@topAndBottomPadding: 2px;
@marginDistance: 10px;
@animationMovementDistance: 10;
@animationDelay: 0.1s;
@animationTime: @animationDelay + 1s;

// Putting these styles in host.less with :not([visible]) causes a slight flash when moving the
// mouse in the direction of the animation. Putting it here makes it work perfectly.
.hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

.tooltip {
  background-color: @ak-color-N900;
  border-radius: @borderRadius;
  box-sizing: border-box;
  color: @fontColor;
  font-size: @fontSize;
  line-height: @lineHeight;
  max-width: @maxWidth;
  margin: @marginDistance;
  padding: @topAndBottomPadding @leftAndRightTextPadding;
  pointer-events: none;
}

//************** Animations ***************//

// define the props to transform for each animation
@slideUp: 'transform', 'translateY(XXpx)', @animationMovementDistance, 0;
@slideDown: 'transform', 'translateY(XXpx)', -@animationMovementDistance, 0;
@slideLeft: 'transform', 'translateX(XXpx)', @animationMovementDistance, 0;
@slideRight: 'transform', 'translateX(XXpx)', -@animationMovementDistance, 0;
@fadeIn: 'opacity', 'XX', 0, 1;

// then create the keyframes for each
.createBoldAnimation(@slideUp @fadeIn, 'slide-up');
.createBoldAnimation(@slideDown @fadeIn, 'slide-down');
.createBoldAnimation(@slideLeft @fadeIn, 'slide-left');
.createBoldAnimation(@slideRight @fadeIn, 'slide-right');

// and create classes to apply them
.slideUpAnimation {
  animation: slide-up @animationTime @animationDelay backwards;
}
.slideDownAnimation {
  animation: slide-down @animationTime @animationDelay backwards;
}
.slideLeftAnimation {
  animation: slide-left @animationTime @animationDelay backwards;
}
.slideRightAnimation {
  animation: slide-right @animationTime @animationDelay backwards;
}