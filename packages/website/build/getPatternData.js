const fs = require('fs');
const path = require('path');

const exampleTemplate = (name, rawName) => `  {
    title: '${name}',
    Component: ${name},
    src: ${rawName},
  },
`;

const patternDataTemplate = patternData => `/* eslint-disable global-require, quote-props */
/**
 * NOTE:
 *
 * This file is automatically generated by the build process.
 * DO NOT CHANGE IT BY HAND or your changes will be lost.
 *
 * To change the format of this file, modify website/build/data.template.js.
 */

/* eslint-disable import/no-duplicates, import/first */
${patternData.paths}
/* eslint-enable import/no-duplicates, import/first */

const examples = [
${patternData.examples.join('')}];

export default examples;
`;

function generatePatternData() {
  return new Promise((resolve) => {
    const patternPath = path.join(__dirname, '../patterns');
    const patterns = fs.readdirSync(patternPath);
    const patternData = patterns.reduce((content, patternFile) => {
      const fileName = patternFile.match(/(.*)\.js/);
      if (!fileName[1]) return content;
      const name = fileName[1];
      const rawName = `${name}Src`;
      const paths = `import ${name} from './patterns/${name}';\nimport ${rawName} from '!raw-loader!./patterns/${name}';\n`;
      content.paths = content.paths.concat(paths);

      const example = exampleTemplate(name, rawName);
      content.examples = content.examples.concat(example);
      return content;
    }, { paths: '', examples: [] });
    const writeFilePath = path.join(__dirname, '../patterns.data.js');
    fs.writeFileSync(writeFilePath, patternDataTemplate(patternData));
    resolve();
  });
}

module.exports = generatePatternData;
