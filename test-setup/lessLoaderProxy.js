// This script is used during testing so that loading a less file (which would normally be handled
// by webpack) instead returns our proxy which will resolve any classname with the classname that
// the consumer was asking for.

// For context: Usually, when a consumer does `import styles from './styles.less'`, webpack will
// return an object that maps classnames to the obfuscated classnames that are generated by the less
// loader. We fake this by instead returnin the classname the consumer asks for
// ```
// import styles from './styles.less';
// console.log(styles.foo); // logs 'foo'
// console.log(styles.bar); // logs 'bar'
// ```

// This is a very convenient way to run the tests because it allows us to still run the old tests
// that still require looking elements up using class names.

// This script will no longer be required once all components have moved to styled components

const camelcase = require('camelcase');

require.extensions['.less'] = function resolveLessFile(module) {
  module.exports = new Proxy({}, {
    get: function getter(target, key) {
      if (key === '__esModule') {
        return false;
      }
      return camelcase(key);
    },
  });
};
